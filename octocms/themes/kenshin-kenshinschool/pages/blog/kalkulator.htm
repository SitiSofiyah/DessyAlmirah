title = "blog kalkulator"
url = "/blog/kalkulator"
layout = "default"
is_hidden = 0
==
<!--************************************
				Main Start
		*************************************-->
<main id="tg-main" class="tg-main tg-haslayout">
    <div class="container">
        <div class="row">
            <div id="tg-twocolumns" class="tg-twocolumns">
                <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9 pull-right">
                    <div id="tg-content" class="tg-content">
                        <div class="tg-detailpage tg-newsdetailpage">
                            <article class="tg-themepost tg-newspost">
                                <div class="tg-themepostcontent">
                                    <div class="tg-themeposttitle">
                                        <h1>Aplikasi Kalkulator Sederhana dengan GFT</h1>
                                    </div>
                                    
                                </div>
                                <figure class="tg-featuredimg"><img src="{{'assets/images/campus.jpg'|theme}}" alt="image description"></figure>
                                <div class="tg-description">
                                    <p>Artikel berikut ini merupakan contoh penerapan framework GFT untuk membuat aplikasi kalkulator sederhana.  Pembuatan aplikasi kalkulator ini dilakukan dengan menulis kode program secara manual (on the scratch) tidak memanfaatkan drag-drop komponen dari pallete swing.  Tujuan yang diharapkan adalah kode akan lebih rapi dan pemahaman terhadap kerja java akan lebih baik.</p>
                                    <p>Penerapan disiplin framework GFT (Grammatical Fast Track) memberikan tahapan-tahapan dalam membangun aplikasi software sebagai berikut:</p>
                                    <div class="icon-caret-right">
                                        <ul>
                                            <li>Memisahkan fungsi engine aplikasi dan presentasi (dalam hal ini perlu dibuat Logik kalkulator dan GUI Kalkulator scr terpisah)</li>
                                            <li>Lakukan analisa terhadap fungsi kerja kalkulator dari sisi fungsi operasional selanjutnya desain class logik kalkulator</li>
                                            <li>Desain Class CalcLogic sebagai engine kalkulator</li>
                                            <li>Test unit CalcLogic sehingga memenuhi fungsi sebagai kalkulator</li>
                                            <li>Desain mock up presentasi kalkulator (swing) tersendiri (Class CalcGUI)</li>
                                            <li>Bagian yang tersulit Interaksi dinamis antara Mock Up ClacGUI dengan logik kalkulator CalcLogic</li>
                                        </ul>
                                 </div>
                                 <br>
                                 <b>Memisahkan Engine dan presentasi pada kalkulator</b>
                                 <br>
                                    <p>Pada tahap ini merupakan observasi terhadap fungsi kalkulator.  Ingat tanpa kalkulator sebenarnya kita juga bisa menghitung.  Hal ini berarti kita sendiripun mempunyai engine kalkulator.   Perhatikan Gambar di bawah, pada awalnya _currentTotal = 0.  Setiap operasi hitung (+,-,*,/,=) mempunyai satu operand yang akan dioperasikan dengan _currentTotal sebelumnya.</p>
                                    <br>
                                    Title : analisa kalkulator
                                    <br>
                                    <br>
                                    <br>
                                    /*<br>
                                     * Silahkan didistribusikan<br>
                                     * Mudah-mudahan bermanfaat<br>
                                     */<br><br>
                                    
                                    /*<br>
                                     * @author nurudin at Inhuaschool akademic<br>
                                     * http://inhuaschool.com<br>
                                     */<br><br>
                                     
                                     //Class CalcLogic murni engine kalkulator dan tidak boleh ada komponen Window (UI)<br>
                                    public class CalcLogic {<br><br>
                                    	
                                    	private int _currentTotal;<br><br>
                                    	
                                    	public CalcLogic () {<br>
                                    		_currentTotal =0;<br>
                                    	}<br><br>
                                    	
                                    	public void tambah (String n) {<br>
                                    		_currentTotal += convertToNumber(n);<br>
                                    	}<br><br>
                                    	
                                    	public void kurang (String n) {<br>
                                    		_currentTotal -= convertToNumber(n);<br>
                                    	}<br><br>
                                    	
                                    	public void kali (String n) {<br>
                                    		_currentTotal *= convertToNumber(n);<br>
                                    	}<br><br>
                                    	
                                    	public void bagi (String n) {<br>
                                    		_currentTotal /= convertToNumber(n);<br>
                                    	}<br><br>
                                    	
                                    	public int convertToNumber (String n) {<br>
                                    		return Integer.parseInt(n);<br>
                                    	}<br><br>
                                    	
                                    	public void setTotal (String n) {<br>
                                    		_currentTotal = convertToNumber(n);<br>
                                    	}<br><br>
                                    	
                                    	public String getTotalString () {<br>
                                    		return "" + _currentTotal;<br>
                                    	}<br><br>
                                    	
                                    }<br>
                                </div>
                            </article>
                        </div>
                    </div>
                </div>




                {% partial 'sidebar_left.htm' %}


            </div>
        </div>
    </div>
</main>
<!--************************************
        Main End
*************************************-->